// REM FUNCTION FROM FOUNDATION FRAMEWORK
$rem-base: 16px !default;
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@function convert-to-rem($value, $base-value: $rem-base) {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function data($attr) {
  @if $namespace {
    @return '[data-' + $namespace + '-' + $attr + ']';
  }

  @return '[data-' + $attr + ']';
}
@function rem($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}

// IMAGE OBJECT FIT POLYFILL FOR IE
@mixin object-fit($fit: cover, $position: center) {
  object-fit: $fit;
  object-position: $position;
  font-family: 'object-fit: #{$fit}; object-position: #{$position};';
}

// LAZY IMAGE BOX
@mixin imagePadding($width,$height,$percentWidth:100) {
  height: 0;
  padding-bottom: percentage($height / $width)*$percentWidth/100;
  position: relative;
  display: block;
  > img {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      display: block;
  }
}